// 插入排序
let insertSort = (arr) => {
    for (let i = 1; i < arr.length; i++) {
      // 如果当前数字比前一个数字小 则将当前数字插入到前面的有序数组中 
      if (arr[i] < arr[i - 1]) {
        // 将当前数字进行保存 因为后续操作会将前面的有序数组往后挪动 从而覆盖掉这个数字
        // 另一方面将这个数字进行备份 有利于后续的取值插入
        let temp = arr[i];
        let j;
        // 对前面有序数组进行倒叙遍历 遍历时如果遍历的数组元素还是比当前数字大则将数组元素往后挪动一个位置
        // 一直到在前面有序数组中找寻到第一个比temp小的数字并将temp插入到这个数字的后面
        for (j = i - 1; j >= 0 && arr[j] > temp; j--) {
          // 有序数组往后挪动为即将插入的数字让出位置
          arr[j + 1] = arr[j];
        }
        // 跳出循环 arr[j] <= temp 说明下标为j的数组元素小于或者等于当前元素
        // 那么可以将当前元素插入到这个元素后面了
        arr[j + 1] = temp;
      }
    }
    return arr;
}

// 测试
let arr = [3, 2, 1, 5, 4];
// [1, 2, 3, 4, 5]
console.log(insertSort(arr));